h1. GitHub Contest: August 2009

A recommendation system for the github-contest by jbrownlee.

h2. Quick Links

* "Github contest website":http://contest.github.com 
* "Contest Leaderboard":http://contest.github.com/leaderboard
* "jbrownlee (my) contest submissions":http://contest.github.com/p/jbrownlee/github-contest

h2. Author

"Jason Brownlee":mailto:jason.brownlee05@gmai.com

h2. Description

This project provides code to generate a solution (results.txt) to the "github contest":http://contest.github.com August 2009. 

h2. Code

I started with a Ruby implementation (/ruby) although quickly found that it was simply too slow. I then moved to an Objective-c implementation (/objc). I chose these two languages as I wanted to know more about their capabilities.

h2. Details

The objective is to recommend repositories to users. Specifically to predict which repositories to recommend to a user given existing known user-repository relationships.

h3. Data

The following is a summary of the data provided in the competition, see /data/readme.txt for more detail.

* <b>data.txt</b> 440,237 known user-to-repository relationships
* <b>repos.txt</b> 120,867 known repositories (id, name, date created, parent repository)
* <b>lang.txt</b> language information for 73,496 repositories (id,lang;total_lines,...)
* <b>test.txt</b> 4,788 users from data.txt, each of which requires a prediction of (up to) 10 repositories

Observations
* All repos with parents have those parents in the dataset
* There are 5 repo language definitions for repos that are not in main repo set (and therefore not currently watched by any users - maybe they were removed in prep of the test set)
* All but 2 of the test users are in the main user set (2 are unknown or new users, maybe all of their repos were stripped in the prep of the test set)

h3. Strategy

The prediction strategy is as follows:
# Generate lots of predictor indicators 
# Build models for applying the indicators toward prediction (indicator weights)
# Generate a candidate set of repos for each test user
# Score candidate repos using weighted indicators (weighted sum)
# Sort scored candidate repos and select the top 10 as user repo predictions

Indicators are at one of three levels:
# <b>Global</b>: probabilistic indicators across all user repo watching 
# <b>Group</b>: users grouped (knn or clustered using kmeans) then probabilistic indicators from this smaller user group
# <b>User</b>: probabilistic indicators across the repos a user watches

h3. Validation Testing

...still a work in progress

h2. Inspirations

* "jeremybarnes' readme":http://github.com/jeremybarnes/github_contest/tree/master
* "danielharan's readme - suggest forked repos":http://github.com/danielharan/github_resys/tree/master
* "cardmagic's strategy overview (and ruby code)":http://github.com/cardmagic/github-contest/tree/master

h2. License 

(The MIT License) 

Copyright (c) 2009 Jason Brownlee

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.